= Notes on setting up a Multi-Machine MagLev environment

== Overview

Even though most MagLev development is done with a single MagLev VM talking
to a MagLev repository on the same machine, MagLev is a distributed system
and allows MagLev VMs from multiple machines to connect to the same
repository.  This note describes how to configure that scenario.

== Synopsis

=== Setup the Repository machine and start MagLev

1. Ensure netldi is set properly in <tt>/etc/services</tt>

   On both the stone machine and the VM machine, make sure there is a
   proper entry in <tt>/etc/services</tt> (or the YP services database, if
   you use that) on *all* machines, and that the entry is correct.  The
   default entry is:

     gs64ldi         50377/tcp        # Gemstone netldi

   but you can name your netldi something else, e.g.,

     mynetldi        10000/tcp        # My MagLev netldi

   The important thing is that whichever netldi you choose, that entry
   should be available in the services database on all machines that will
   participate in the cluster.

2. Setup envrionment on stone machine

   Assuming your $MAGLEV_HOME environment variable is correct:

     $ unset GEMSTONE_NRS_ALL                  # precautionary
     $ export GEMSTONE=$MAGLEV_HOME/gemstone
     $ export GEMSTONE_GLOBAL_DIR=$MAGLEV_HOME

   If you are using a non-standard netldi name/port, then:

     $ export gs64ldi=mynetldi

3. Start netldi on stone machine

   Start the netldi daemon on the Repoistory machine in guest mode, to
   allow MagLev VMs on remote machines to connect to this Repository.

     $ $GEMSTONE/bin/startnetldi -g -a$USER -d ${gs64ldi:-gs64ldi}

   The meaning of the options is:
     -g        Guest mode: Allow clients of any user to login to GemStone
     -a $USER  Run netldi as user $USER
     -d        Print debug info
     ${gs64ldi:-gs64ldi}  The name of the netldi (must match entry in
                /etc/services)

4. Start the stone

   The stone must be started with the gs64ldi environment variable set
   correctly.  To do that, just pass the netldi name you need to the
   maglev:start rake script:

     $ cd $MAGLEV_HOME
     $ rake maglev:start[mynetldi]

=== Setup remote MagLev VM machine and start MagLev VM

1. Setup envrionment on remote VM machine

   Ensure the netldi entry in <tt>/etc/services</tt> is the same as it is
   on the Repository machine.

     $ export GEMSTONE=$MAGLEV_HOME/gemstone

   If you are using a non-standard netldi name, then:

     $ export gs64ldi=mynetldi                # same name as on stone machine

2. Setup login credentials

   Make sure there is a ~/.netrc entry for the user / machine / password of
   the stone machine.

3. Start netldi on the remote VM machine:

     $ unset GEMSTONE_NRS_ALL                  # precautionary
     $ export GEMSTONE=$MAGLEV_HOME/gemstone
     $ $GEMSTONE/bin/startnetldi -a$USER ${gs65ldi:-gs64ldi}

   The <tt>-a$USER</tt> is important.  The local topaz will call over to
   the Stone machine's netldi process.  The netldi process on the stone
   machine then contacts the netldi on the gem machine (this machine), and
   asks the local netldi to start a shared page cache.  The netldi on this
   machine will then create the shared page cache running as the user
   passed in via <tt>-a$USER</tt>.  If no user was passed to startnetldi,
   then the local netldi will attempt to create the shared page cache
   running as the same username as whatever user is running on the Stone
   machine (which may not exist on this machine).

4. Start topaz

   Start a topaz session to connect to the stone.

     $ $GEMSTONE/bin/topaz -l
     topaz> set user DataCurator pass swordfish
     topaz> set gemstone !@mystone.machine.org!maglev
     topaz> login
     [06/27/11 13:25:38.950 PDT]
       gci login: currSession 2 rpc gem processId 19021 OOB keep-alive interval 0
     successful login
     topaz 2>

== Issues / Problems

For further details on connecting remote machines, consult the GS64 System
Administration Guide, especially the section "How to Set Up a Remote
Session".

=== Issues with <tt>$GEMSTONE_NRS_ALL</tt>

If you are running on a heterogenous setup (e.g., Linux stone machine and
OSX VM machine), you may run into problems with some settings for
$GEMSTONE_NRS_ALL.  E.g., if you have:

  export GEMSTONE_NRS_ALL=#dir:/Users/pmclain/GemStone/logs

you may run into problems, since <tt>/Users</tt> is correct for OSX, but on
Linux, your home directory may be <tt>/home/pmcalin</tt>.  If the setting
for GEMSTONE_NRS_ALL is different, MagLev may complain and refuse to
connect.

* Need a nicer way than ~/.netrc to login
* Can we synchronize the netldi ports by explict parameters on each side?
  Or is the only way to rely on /etc/services entries to be synchronized?

=== Need nice way to invoke a remote vm:

W need a a nice <tt>--remote XXX</tt> option for <tt>maglev-ruby</tt>.
We should be able to do something like:

  $ maglev-ruby --stone foobar \
      --host some.host.com     \
      --netldiport 12345       \
      my_script.rb

  # Don't think this is necessary
  topaz> set gemnetid !@localhost#netldi:ldipmcclain#task!gemnetobject
